<p><a href="../README.htm">Website Home Page</a></p>
<h1 id="demonstrations-and-examples">Demonstrations and Examples</h1>
<hr />
<p>Demonstrations and examples assume successful connection to an <a href="http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html">Oracle database</a> with wtPLSQL installed. wtPLSQL Installation instructions are available on the <a href="https://github.com/DDieterich/wtPLSQL/releases">wtPLSQL Releases page</a>.</p>
<p>Test results from assertions can be queried from a set of wtPLSQL tables. The examples here will use the default reporting package called WT_TEXT_REPORT. This package displays test results using DBMS_OUTPUT.</p>
<h2 id="the-basics">The Basics</h2>
<p>A login, or database session, is required to interact with the Oracle database. The SQL below will create a user that can run these examples. If you already have a database login, this is not necessary.</p>
<pre><code>create user wtp_demo identified by wtp_demo
   default tablespace users
   quota unlimited on users
   temporary tablespace temp;

grant create session   to wtp_demo;
grant create type      to wtp_demo;
grant create sequence  to wtp_demo;
grant create table     to wtp_demo;
grant create trigger   to wtp_demo;
grant create view      to wtp_demo;
grant create procedure to wtp_demo;
</code></pre>
<p>The simplest check for a wtPLSQL installation is to select the &quot;version from dual&quot;.</p>
<p>Run this:</p>
<pre><code>select wtplsql.show_version from dual;
</code></pre>
<p>And get this:</p>
<pre><code>SHOW_VERSION
-----------------------------------------------------------
1.1.0
</code></pre>
<p>This shows the wtPLSQL version as 1.1.0.</p>
<p>Another simple test is an ad-hoc assertion. This test requires DBMS_OUTPUT. The results of this test are not recorded.</p>
<p>Run this:</p>
<pre><code>set serveroutput on size unlimited format word_wrapped

begin
   wt_assert.eq(msg_in          =&gt; &#39;Ad-Hoc Test&#39;
               ,check_this_in   =&gt;  1
               ,against_this_in =&gt; &#39;1&#39;);
end;
/
</code></pre>
<p>And get this:</p>
<pre><code>PASS Ad-Hoc Test. EQ - Expected &quot;1&quot; and got &quot;1&quot;
</code></pre>
<p>This indicates:</p>
<ul>
<li>the assertion passed</li>
<li>the assertion had the message &quot;Ad-Hoc Test&quot;</li>
<li>the assertion name is &quot;EQ&quot;</li>
<li>the assertion details which may include the values tested</li>
</ul>
<p>Note: This ad-hoc test also demonstrates implicit data type conversion.</p>
<h2 id="create-a-test-runner-package">Create a Test Runner Package</h2>
<p>A test runner package is central to running tests in wtPLSQL. The <a href="Test-Runner.htm">Test Runner</a> page covers all the basics of creating a test runner package.</p>
<h2 id="database-object-tests">Database Object Tests</h2>
<p>More interesting examples actually test database objects. Here are some examples.</p>
<ul>
<li><a href="Package-Test.htm">Package Test</a></li>
<li><a href="Table-Test.htm">Table Constraints Test</a></li>
<li><a href="Trigger-Test.htm">Trigger Test</a></li>
<li><a href="Type-Test.htm">Type Test</a></li>
</ul>
<h2 id="utplsql-23-examples">utPLSQL 2.3 Examples</h2>
<p>wtPLSQL was built with the utPLSQL &quot;ut_assert&quot; API. These examples were created from the original utPLSQL 2.3 examples without modifying the &quot;ut_assert&quot; calls</p>
<ul>
<li><a href="ut_betwnstr.htm">ut_betwnstr</a> - Choose a program to test</li>
<li><a href="ut_calc_secs_between.htm">ut_calc_secs_between</a> - Test a Simple Procedure</li>
<li><a href="ut_truncit.htm">ut_truncit</a> - Test a Table Modification Procedure</li>
<li><a href="ut_str.htm">ut_str</a> - Test a Simple Function</li>
</ul>
<h2 id="demo-installer">Demo Installer</h2>
<p>To save some typing, there is an installer for the demonstrations and examples. This installer will:</p>
<ul>
<li>Prompt for a schema name (WT_DEMO is the default).</li>
<li>Confirm the database user is SYS or SYSTEM.</li>
<li>Create the schema.</li>
<li>Load database objects in the schema.</li>
</ul>
<p>To run this installer:</p>
<ol>
<li>cd to &quot;src/demo&quot;</li>
<li>login as SYS or SYSTEM using SQL*Plus</li>
<li>Run the &quot;install.sql&quot; script</li>
</ol>
<p>To confirm a successful installation, review the newly created &quot;install.LST&quot; log file against the &quot;installO.LST&quot; example log file.</p>
<h2 id="demo-un-install">Demo Un-Install</h2>
<p>The &quot;uninstall.sql&quot; script provided in the &quot;src/demo&quot; directory drops the demo schema from the database, with cascade.</p>
<p>To un-install:</p>
<ol>
<li>cd to &quot;src/demo&quot;</li>
<li>login as SYS or SYSTEM using SQL*Plus</li>
<li>Run the &quot;uninstall.sql&quot; script</li>
</ol>
<p>To confirm a successful un-install, review the &quot;uninstall.LST&quot; log file against the &quot;uninstallO.LST&quot; example log file.</p>
<hr />
<p><a href="../README.htm">Website Home Page</a></p>
